{
  "未找到结果": [
    "/mnt/Data/coding_run/task19/FunASR_01/9f435e9e-8b63-45cf-818f-547204463c72/FunASR",
    "/mnt/Data/coding_run/task19/FunASR_03/0082adec-f1bb-488e-ac05-e1ba30744c8b/FunASR"
  ],
  "未找到测试脚本": [
    "GitTaskBench/eval_automation/test_scripts/VideoPose3D_02/test_script.py",
    "GitTaskBench/eval_automation/test_scripts/VideoPose3D_03/test_script.py"
  ],
  "计算过程错误": [
    {
      "task_id": "VideoPose3D_01",
      "error": "Traceback (most recent call last):\n  File \"/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/test_task_score.py\", line 42, in single_task_score\n    process.check_returncode()  # 如果命令失败会抛出异常\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/.conda/envs/ex/lib/python3.11/subprocess.py\", line 502, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'cd GitTaskBench/eval_automation/test_scripts/VideoPose3D_01 && bash run_test.sh' returned non-zero exit status 1.\n",
      "source_result_path": "/mnt/Data/coding_run/task19/VideoPose3D_01/13fc7404-f187-4902-8abb-62c316cb7b5d/VideoPose3D/output_result",
      "dst_path": "GitTaskBench",
      "logs": "创建必要的目录...\n检查必要的文件...\n查找输出文件...\n=== 开始评估 VideoPose3D_01 输出 ===\n输入文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/output/VideoPose3D_01/output.npz\n结果文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/VideoPose3D_01/results.jsonl\n[失败] 评估完成，结果不满足要求。\nTraceback (most recent call last):\n  File \"/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_scripts/VideoPose3D_01/test_script.py\", line 175, in <module>\n    sys.exit(main()) \n             ^^^^^^\n  File \"/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_scripts/VideoPose3D_01/test_script.py\", line 141, in main\n    if data.size == 0:\n       ^^^^^^^^^\nAttributeError: 'NpzFile' object has no attribute 'size'\n"
    },
    {
      "task_id": "Trafilatura_02",
      "error": "Traceback (most recent call last):\n  File \"/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/test_task_score.py\", line 48, in single_task_score\n    result = json.loads(open(f\"{dst_path}/eval_automation/test_results/{task_id}/results.jsonl\").readlines()[-1])\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/.conda/envs/ex/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/.conda/envs/ex/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/.conda/envs/ex/lib/python3.11/json/decoder.py\", line 353, in raw_decode\n    obj, end = self.scan_once(s, idx)\n               ^^^^^^^^^^^^^^^^^^^^^^\njson.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)\n",
      "source_result_path": "/mnt/Data/coding_run/task19/Trafilatura_02/04565b61-e3de-41d3-b7fe-c1f5f673dfbf/Trafilatura/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== [Tue May  6 10:06:36 PM UTC 2025] 测试开始: Trafilatura_02 ===\n字符级准确率（Char Accuracy）: 0.0000\n❌ 提取有误\n结果已保存到: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/Trafilatura_02/results.jsonl\n[✅ 成功] 测试完成，结果写入: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/Trafilatura_02/results.jsonl\n"
    },
    {
      "task_id": "DeOldify_02",
      "error": "Traceback (most recent call last):\n  File \"/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/test_task_score.py\", line 42, in single_task_score\n    process.check_returncode()  # 如果命令失败会抛出异常\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/.conda/envs/ex/lib/python3.11/subprocess.py\", line 502, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'cd GitTaskBench/eval_automation/test_scripts/DeOldify_02 && bash run_test.sh' returned non-zero exit status 1.\n",
      "source_result_path": "/mnt/Data/coding_run/task19/DeOldify_02/1fb70171-d3f4-4f66-b364-7306b34703b0/DeOldify/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== 开始处理仓库 DeOldify_02 ===\n[失败] 请检查以上错误信息！\n/home/.conda/envs/ex/lib/python3.11/site-packages/torchvision/transforms/functional_tensor.py:5: UserWarning: The torchvision.transforms.functional_tensor module is deprecated in 0.15 and will be **removed in 0.17**. Please don't rely on it. You probably just need to use APIs in torchvision.transforms.functional or in torchvision.transforms.v2.functional.\n  warnings.warn(\nCIEDE2000 平均色差：4.3841 (阈值 2.0)\n重建图像 NIQE 分数：8.8632 (阈值 7.0)\n❌ 处理效果不符合要求：NIQE 未达标\n"
    },
    {
      "task_id": "SuperResolution_03",
      "error": "Traceback (most recent call last):\n  File \"/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/test_task_score.py\", line 42, in single_task_score\n    process.check_returncode()  # 如果命令失败会抛出异常\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/.conda/envs/ex/lib/python3.11/subprocess.py\", line 502, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'cd GitTaskBench/eval_automation/test_scripts/SuperResolution_03 && bash run_test.sh' returned non-zero exit status 1.\n",
      "source_result_path": "/mnt/Data/coding_run/task19/SuperResolution_03/bf9f0195-4909-455e-bcd5-561e189ff1c9/SuperResolution/output_result",
      "dst_path": "GitTaskBench",
      "logs": "[错误] 文件不存在: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/output/SuperResolution_03/output.jpg\n"
    },
    {
      "task_id": "DeOldify_01",
      "error": "Traceback (most recent call last):\n  File \"/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/test_task_score.py\", line 42, in single_task_score\n    process.check_returncode()  # 如果命令失败会抛出异常\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/.conda/envs/ex/lib/python3.11/subprocess.py\", line 502, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'cd GitTaskBench/eval_automation/test_scripts/DeOldify_01 && bash run_test.sh' returned non-zero exit status 1.\n",
      "source_result_path": "/mnt/Data/coding_run/task19/DeOldify_01/ff3cc472-1521-49d4-9930-2d06ca6edca5/DeOldify/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== 开始处理仓库 DeOldify_01 ===\n[失败] 请检查以上错误信息！\n/home/.conda/envs/ex/lib/python3.11/site-packages/torchvision/transforms/functional_tensor.py:5: UserWarning: The torchvision.transforms.functional_tensor module is deprecated in 0.15 and will be **removed in 0.17**. Please don't rely on it. You probably just need to use APIs in torchvision.transforms.functional or in torchvision.transforms.v2.functional.\n  warnings.warn(\n文件不存在：/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/output/DeOldify_01/output.png\n"
    },
    {
      "task_id": "DeScratch_02",
      "error": "Traceback (most recent call last):\n  File \"/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/test_task_score.py\", line 42, in single_task_score\n    process.check_returncode()  # 如果命令失败会抛出异常\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/.conda/envs/ex/lib/python3.11/subprocess.py\", line 502, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'cd GitTaskBench/eval_automation/test_scripts/DeScratch_02 && bash run_test.sh' returned non-zero exit status 1.\n",
      "source_result_path": "/mnt/Data/coding_run/task19/DeScratch_02/137b8d56-5ea1-4c6a-901a-c7e439cc849c/DeScratch/output_result",
      "dst_path": "GitTaskBench",
      "logs": "检查文件路径：/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_scripts/DeScratch_02/test_script.py\nGT路径：/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/groundtruth/DeScratch_02/gt\n预测路径：/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/output/DeScratch_02/output\n[错误] 目录不存在: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/output/DeScratch_02/output\n"
    },
    {
      "task_id": "DeScratch_03",
      "error": "Traceback (most recent call last):\n  File \"/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/test_task_score.py\", line 42, in single_task_score\n    process.check_returncode()  # 如果命令失败会抛出异常\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/.conda/envs/ex/lib/python3.11/subprocess.py\", line 502, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'cd GitTaskBench/eval_automation/test_scripts/DeScratch_03 && bash run_test.sh' returned non-zero exit status 1.\n",
      "source_result_path": "/mnt/Data/coding_run/task19/DeScratch_03/9931c2d6-354b-46a6-8065-a977b9897d69/DeScratch/output_result",
      "dst_path": "GitTaskBench",
      "logs": "检查文件路径：/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_scripts/DeScratch_03/test_script.py\nGT路径：/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/groundtruth/DeScratch_03/gt\n预测路径：/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/output/DeScratch_03/output\n[错误] 目录不存在: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/output/DeScratch_03/output\n"
    },
    {
      "task_id": "SpeechEnhance_01",
      "error": "Traceback (most recent call last):\n  File \"/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/test_task_score.py\", line 42, in single_task_score\n    process.check_returncode()  # 如果命令失败会抛出异常\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/.conda/envs/ex/lib/python3.11/subprocess.py\", line 502, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'cd GitTaskBench/eval_automation/test_scripts/SpeechEnhance_01 && bash run_test.sh' returned non-zero exit status 1.\n",
      "source_result_path": "/mnt/Data/coding_run/task19/SpeechEnhance_01/6119c5f2-8841-4f97-9310-7fc7a298bb1b/SpeechEnhance/output_result",
      "dst_path": "GitTaskBench",
      "logs": "创建必要的目录...\n检查必要的文件...\n=== 开始处理仓库 SpeechEnhance_01 ===\n输入文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/output/SpeechEnhance_01/output.wav\n参考文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/groundtruth/SpeechEnhance_01/gt.wav\n结果文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/SpeechEnhance_01/results.jsonl\n结果不满足要求: PESQ = 1.28\nSNR = -24.27 dB\nPESQ (1.28) 低于阈值 2.0\nSNR (-24.27 dB) 低于阈值 15.0 dB\n[失败] 测试执行出错，请检查以上错误信息！\n"
    },
    {
      "task_id": "SpeechBrain_01",
      "error": "Traceback (most recent call last):\n  File \"/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/test_task_score.py\", line 42, in single_task_score\n    process.check_returncode()  # 如果命令失败会抛出异常\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/.conda/envs/ex/lib/python3.11/subprocess.py\", line 502, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'cd GitTaskBench/eval_automation/test_scripts/SpeechBrain_01 && bash run_test.sh' returned non-zero exit status 1.\n",
      "source_result_path": "/mnt/Data/coding_run/task19/SpeechBrain_01/911198bb-2575-4bd7-b7b1-92da971c63d5/SpeechBrain/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== 开始处理仓库 SpeechBrain_01 ===\n[失败] 请检查以上错误信息！\n"
    },
    {
      "task_id": "NeuroKit_03",
      "error": "Traceback (most recent call last):\n  File \"/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/test_task_score.py\", line 42, in single_task_score\n    process.check_returncode()  # 如果命令失败会抛出异常\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/.conda/envs/ex/lib/python3.11/subprocess.py\", line 502, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'cd GitTaskBench/eval_automation/test_scripts/NeuroKit_03 && bash run_test.sh' returned non-zero exit status 127.\n",
      "source_result_path": "/mnt/Data/coding_run/task19/NeuroKit_03/00bdd41e-d06f-43bd-aeec-683bdc505c54/NeuroKit/output_result",
      "dst_path": "GitTaskBench",
      "logs": "bash: run_test.sh: No such file or directory\n"
    },
    {
      "task_id": "Scrapy_01",
      "error": "Traceback (most recent call last):\n  File \"/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/test_task_score.py\", line 42, in single_task_score\n    process.check_returncode()  # 如果命令失败会抛出异常\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/.conda/envs/ex/lib/python3.11/subprocess.py\", line 502, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'cd GitTaskBench/eval_automation/test_scripts/Scrapy_01 && bash run_test.sh' returned non-zero exit status 1.\n",
      "source_result_path": "/mnt/Data/coding_run/task19/Scrapy_01/622bd790-4208-4897-aae4-b6566a144641/Scrapy/output_result",
      "dst_path": "GitTaskBench",
      "logs": "❌ 文件不存在: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/output/Scrapy_01/output.jsonl\n"
    },
    {
      "task_id": "Trafilatura_03",
      "error": "Traceback (most recent call last):\n  File \"/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/test_task_score.py\", line 42, in single_task_score\n    process.check_returncode()  # 如果命令失败会抛出异常\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/.conda/envs/ex/lib/python3.11/subprocess.py\", line 502, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'cd GitTaskBench/eval_automation/test_scripts/Trafilatura_03 && bash run_test.sh' returned non-zero exit status 1.\n",
      "source_result_path": "/mnt/Data/coding_run/task19/Trafilatura_03/6a6fa8fa-6f5b-4bb6-8bd7-60be4d1ac8de/Trafilatura/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== [Tue May  6 10:08:22 PM UTC 2025] 测试开始: Trafilatura_03 ===\n🔍 精度: 0.6308 | 召回率: 0.7736\n结果: :x: 精确度 0.6308 不满足 92%\n[❌ 失败] 脚本执行出错\n"
    },
    {
      "task_id": "Scrapy_03",
      "error": "Traceback (most recent call last):\n  File \"/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/test_task_score.py\", line 48, in single_task_score\n    result = json.loads(open(f\"{dst_path}/eval_automation/test_results/{task_id}/results.jsonl\").readlines()[-1])\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFileNotFoundError: [Errno 2] No such file or directory: 'GitTaskBench/eval_automation/test_results/Scrapy_03/results.jsonl'\n",
      "source_result_path": "/mnt/Data/coding_run/task19/Scrapy_03/08132430-211b-4032-a2e4-34840efb0e0a/Scrapy/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== [Tue May  6 10:08:23 PM UTC 2025] 开始测试 Scrapy_03 ===\n⚠️ 预测结果与标注数据长度不一致（预测 0 条，真实 12 条），按最小数量进行比较。\n❌ 错误：预测或标准数据为空。\n✅ 测试成功，结果写入: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/Scrapy_03/results.jsonl\n"
    },
    {
      "task_id": "PyPDF2_03",
      "error": "Traceback (most recent call last):\n  File \"/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/test_task_score.py\", line 42, in single_task_score\n    process.check_returncode()  # 如果命令失败会抛出异常\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/.conda/envs/ex/lib/python3.11/subprocess.py\", line 502, in check_returncode\n    raise CalledProcessError(self.returncode, self.args, self.stdout,\nsubprocess.CalledProcessError: Command 'cd GitTaskBench/eval_automation/test_scripts/PyPDF2_03 && bash run_test.sh' returned non-zero exit status 1.\n",
      "source_result_path": "/mnt/Data/coding_run/task19/PyPDF2_03/a8bb6ef5-7ffb-4b6b-a174-14407397e7a5/PyPDF2/output_result",
      "dst_path": "GitTaskBench",
      "logs": "[❌ 错误] 缺失文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/output/PyPDF2_03/output.txt\n"
    }
  ],
  "未获得分数": [],
  "任务评分结果": [
    {
      "task_id": "PyPDF2_01",
      "source_result_path": "/mnt/Data/coding_run/task19/PyPDF2_01/8c5e99c8-4606-4b5f-bf87-d64b6c1ffb82/PyPDF2/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== [Tue May  6 10:06:32 PM UTC 2025] 测试开始: PyPDF2_01 ===\n提取的文本内容准确率：100.00%\n✅ 测试通过！\n[✅ 成功] 测试完成，结果写入: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/PyPDF2_01/results.jsonl\n",
      "result": {
        "Process": true,
        "Results": true,
        "TimePoint": "2025-05-06T22:06:32",
        "comments": "提取的文本准确率 100.00%，满足要求。"
      },
      "process_success": true,
      "Result_success": true
    },
    {
      "task_id": "Faker_02",
      "source_result_path": "/mnt/Data/coding_run/task19/Faker_02/de3fd7e7-d070-412b-bad3-5df48f40637b/Faker/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== [Tue May  6 10:06:32 PM UTC 2025] 开始测试: Faker_02 ===\n所有 5 条公司数据验证通过！\n[✅ 成功] 测试完成，结果写入: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/Faker_02/results.jsonl\n",
      "result": {
        "Process": true,
        "Results": true,
        "TimePoint": "2025-05-06T22:06:32",
        "comments": "所有 5 条公司数据验证通过！"
      },
      "process_success": true,
      "Result_success": true
    },
    {
      "task_id": "PDFPlumber_03",
      "source_result_path": "/mnt/Data/coding_run/task19/PDFPlumber_03/a91b5e91-ba18-47a9-98e9-69381d2ec95e/PDFPlumber/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== [Tue May  6 10:06:33 PM UTC 2025] 开始评估 PDFPlumber_03 ===\n[评估完成] 结果摘要：\n{\n  \"Process\": true,\n  \"Result\": true,\n  \"TimePoint\": \"2025-05-06T22:06:33.135935\",\n  \"comments\": \"提取的邮箱地址准确率：100.00%\\n✅ 测试通过！\"\n}\n[✅ 成功] 测试完成，结果写入: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/PDFPlumber_03/results.jsonl\n",
      "result": {
        "Process": true,
        "Result": true,
        "TimePoint": "2025-05-06T22:06:33.135935",
        "comments": "提取的邮箱地址准确率：100.00%\n✅ 测试通过！"
      },
      "process_success": true,
      "Result_success": true
    },
    {
      "task_id": "DeScratch_01",
      "source_result_path": "/mnt/Data/coding_run/task19/DeScratch_01/4a078db5-722b-41bb-bb2c-19296b709c2d/DeScratch/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== 开始处理仓库 DeScratch_01 ===\n[成功] 输出文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/DeScratch_01/results.jsonl\n",
      "result": {
        "Process": true,
        "Result": false,
        "TimePoint": "2025-05-06T22:06:35",
        "comments": "检测到白色像素 492796 个，疑似划痕"
      },
      "process_success": true,
      "Result_success": false
    },
    {
      "task_id": "Scrapy_02",
      "source_result_path": "/mnt/Data/coding_run/task19/Scrapy_02/3eac5703-a94a-48ed-b7bd-cfd6d848a226/Scrapy/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== [Tue May  6 10:06:37 PM UTC 2025] 开始测试 Scrapy_02 ===\n字段 'author' 的准确率: 1.0000\n字段 'text' 的准确率: 1.0000\n✅ 验证通过: 所有列准确度大于95%\n✅ 测试成功，结果写入: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/Scrapy_02/results.jsonl\n",
      "result": {
        "Process": true,
        "Results": true,
        "TimePoint": "2025-05-06T22:06:37.256697",
        "comments": "字段级准确率: {'author': 1.0, 'text': 1.0}, 满足 95% 阈值"
      },
      "process_success": true,
      "Result_success": true
    },
    {
      "task_id": "NeuroKit_02",
      "source_result_path": "/mnt/Data/coding_run/task19/NeuroKit_02/2d12ad75-4956-4ae9-8050-a98764277dc0/NeuroKit/output_result",
      "dst_path": "GitTaskBench",
      "logs": "\u001b[0;34m工作目录: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_scripts/NeuroKit_02\u001b[0m\n\u001b[0;34m输入目录: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/output/NeuroKit_02\u001b[0m\n\u001b[0;34m结果目录: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/NeuroKit_02\u001b[0m\n\n\u001b[0;33m================ EDA 评估开始 =================\u001b[0m\n\u001b[0;34m运行评估脚本...\u001b[0m\n开始评估EDA分析结果...\n评估完成，结果已保存至/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/NeuroKit_02/results.jsonl\n评估结果: 失败\n与groundtruth匹配度: 0.0%\n\u001b[0;31m评估失败!\u001b[0m\n\u001b[0;31m错误: \u001b[0m\n\n\u001b[0;33m================ 评估结果 =================\u001b[0m\n\u001b[0;34m皮肤电活动分析: \u001b[0;31m失败 - \u001b[0m\u001b[0m\n\n\u001b[0;33m================ 评估结束 =================\u001b[0m\n\n\u001b[0;34m使用说明:\u001b[0m\n  \u001b[0;33m./run_evaluation.sh\u001b[0m             - 仅评估现有输出结果\n  \u001b[0;33m./run_evaluation.sh -r\u001b[0m          - 先运行测试脚本生成输出，再评估结果\n  \u001b[0;33m./run_evaluation.sh --result FILE\u001b[0m - 指定JSONL结果文件保存路径\n",
      "result": {
        "Process": false,
        "Result": false,
        "TimePoint": "2025-05-06T22:06:43.667890",
        "comments": "错误：找不到SCR特征文件。错误：找不到EDA指标文件。错误：找不到处理后的EDA数据。错误：找不到EDA统计摘要。"
      },
      "process_success": false,
      "Result_success": false
    },
    {
      "task_id": "Stegano_01",
      "source_result_path": "/mnt/Data/coding_run/task19/Stegano_01/fb898c58-6ad8-4c59-9cec-0a9a946f9d5c/Stegano/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== [Tue May  6 10:06:44 PM UTC 2025] 测试开始: Stegano_01 ===\n✅ 测试结果已保存至 /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/Stegano_01/results.jsonl\n[✅ 成功] 测试完成，结果写入: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/Stegano_01/results.jsonl\n",
      "result": {
        "Process": true,
        "Result": "True",
        "TimePoint": "2025-05-06T22:06:44.832738",
        "comments": "✅ 提取结果: 'stegano' | GT: 'stegano'\n📐 PSNR: 102.60 dB\n🎯 水印检测_match: 100%\n🎯 PSNR ≥ 40.0: ✅ 满足"
      },
      "process_success": true,
      "Result_success": true
    },
    {
      "task_id": "StyleTransfer_02",
      "source_result_path": "/mnt/Data/coding_run/task19/StyleTransfer_02/cf1bf2f9-4548-4649-8757-801d49644d6c/StyleTransfer/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== 开始处理仓库 StyleTransfer_02 ===\n\n评估结果：\n------------------------------\nPSNR（峰值信噪比）: 15.24 dB\n任务结果: 成功\n------------------------------\n[成功] 输出文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/StyleTransfer_02/results.jsonl\n",
      "result": {
        "Process": true,
        "Results": true,
        "TimePoint": "2025-05-06T22:06:47",
        "comments": "PSNR: 15.24, 任务结果: 成功"
      },
      "process_success": true,
      "Result_success": true
    },
    {
      "task_id": "TransparentBackground_01",
      "source_result_path": "/mnt/Data/coding_run/task19/TransparentBackground_01/1d93a329-522a-463f-907f-ff2e7882cfc4/TransparentBackground/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== 开始处理仓库 TransparentBackground_01 ===\nTrue\n[成功] 输出文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/TransparentBackground_01/results.jsonl\n",
      "result": {
        "Process": true,
        "Results": true,
        "TimePoint": "2025-05-06T22:06:52",
        "comments": "原图色彩丰富度: 71.40, 结果图色彩丰富度: 38.36, 差值: 33.04, 阈值: 20.0"
      },
      "process_success": true,
      "Result_success": true
    },
    {
      "task_id": "Stegano_02",
      "source_result_path": "/mnt/Data/coding_run/task19/Stegano_02/9f94473e-d612-4845-a3e7-309740275c1a/Stegano/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== [Tue May  6 10:06:53 PM UTC 2025] 测试开始: Stegano_02 ===\n✅ 测试通过：提取消息与ground truth一致 (match = 100%)\n✅ 结果已追加到 JSONL 文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/Stegano_02/results.jsonl\n[✅ 成功] 测试完成，结果写入: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/Stegano_02/results.jsonl\n",
      "result": {
        "Process": true,
        "Result": true,
        "TimePoint": "2025-05-06T22:06:53.310235",
        "comments": "✅ 测试通过：提取消息与ground truth一致 (match = 100%)"
      },
      "process_success": true,
      "Result_success": true
    },
    {
      "task_id": "AnimeGANv3_03",
      "source_result_path": "/mnt/Data/coding_run/task19/AnimeGANv3_03/3644449b-90c6-41c9-b7f6-84ac52026b2e/AnimeGANv3/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== 开始处理仓库 AnimeGANv3_03 ===\n正在评估视频：\n输入视频：/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/groundtruth/AnimeGANv3_03/gt.mp4\n输出视频：/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/output/AnimeGANv3_03/output.mp4\n平均SSIM：0.8005\nFID得分：594.80\n\n评估结果：\nSSIM（≥ 0.7）：通过 (0.8005)\nFID（≤ 400.0）：未通过 (594.80)\n总体成功：否\n[成功] 输出文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/AnimeGANv3_03/results.jsonl\n/home/.conda/envs/ex/lib/python3.11/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.\n  warnings.warn(\n/home/.conda/envs/ex/lib/python3.11/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=Inception_V3_Weights.IMAGENET1K_V1`. You can also use `weights=Inception_V3_Weights.DEFAULT` to get the most up-to-date weights.\n  warnings.warn(msg)\n",
      "result": {
        "Process": true,
        "Result": "False",
        "TimePoint": "2025-05-06T22:07:20",
        "comments": "正在评估视频：\n输入视频：/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/groundtruth/AnimeGANv3_03/gt.mp4\n输出视频：/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/output/AnimeGANv3_03/output.mp4\n平均SSIM：0.8005\nFID得分：594.80\n\n评估结果：\nSSIM（≥ 0.7）：通过 (0.8005)\nFID（≤ 400.0）：未通过 (594.80)\n总体成功：否"
      },
      "process_success": true,
      "Result_success": false
    },
    {
      "task_id": "InvisibleWatermark_01",
      "source_result_path": "/mnt/Data/coding_run/task19/InvisibleWatermark_01/1b5db995-cfd8-4c82-95e2-84a4a84d0f5e/InvisibleWatermark/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== 开始处理仓库 InvisibleWatermark_01 ===\n✅ 结果已追加到 JSONL 文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/InvisibleWatermark_01/results.jsonl\n[成功] 输出文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/output/InvisibleWatermark_01/output.png\n",
      "result": {
        "Process": true,
        "Result": false,
        "TimePoint": "2025-05-06T22:07:25.021080",
        "Comments": "❌ 提取结果: 'wwwwwwwww' | GT: 'invisible'\n📐 PSNR: 39.06 dB\n🎯 水印检测_match: 0%\n🎯 PSNR ≥ 30.0: ✅ 满足\n最终评估结果：水印匹配=False, PSNR满足=True"
      },
      "process_success": true,
      "Result_success": false
    },
    {
      "task_id": "DeOldify_03",
      "source_result_path": "/mnt/Data/coding_run/task19/DeOldify_03/f3e5dbc3-74f1-46db-bbf5-1d287482f18b/DeOldify/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== 开始处理仓库 DeOldify_03 ===\n=== Evaluation ===\nProcess OK:  True\nResult OK:   False\nAverage colorfulness: 4.07\nFail\n[成功] 输出文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/DeOldify_03/results.jsonl\n",
      "result": {
        "Process": true,
        "Results": false,
        "TimePoint": "2025-05-06T22:07:26.732787",
        "comments": "Average colorfulness: 4.07; Fail"
      },
      "process_success": true,
      "Result_success": false
    },
    {
      "task_id": "Eparse_02",
      "source_result_path": "/mnt/Data/coding_run/task19/Eparse_02/a3af3dea-8887-465b-aa9b-68a287801a2f/Eparse/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== [Tue May  6 10:07:27 PM UTC 2025] 测试开始: Eparse_02 ===\n结果已保存到 /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/Eparse_02/results.jsonl\n[✅ 成功] 测试完成，结果写入: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/Eparse_02/results.jsonl\n",
      "result": {
        "Process": true,
        "Results": false,
        "TimePoint": "2025-05-06T22:07:27",
        "comments": "❌ 测试未通过。字符级Accuracy=0.0322 < 0.8"
      },
      "process_success": true,
      "Result_success": false
    },
    {
      "task_id": "SuperResolution_02",
      "source_result_path": "/mnt/Data/coding_run/task19/SuperResolution_02/2022c5ae-e97d-428b-aabd-865d3f7df829/SuperResolution/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== 开始处理仓库 SuperResolution_02 ===\n输入图像: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/groundtruth/SuperResolution_02/gt.jpg\n输出图像: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/output/SuperResolution_02/output.jpg\nEvaluation Results:\nPSNR: 26.94978736116805\nPSNR Threshold: 18.0\nESI (Edge Strength Improvement): 1.6602674307157193\nESI Threshold: 1.2\nSSIM: 0.8886335337311387\nSSIM Threshold: 0.8\nSuccess: True\n[成功] 输出文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/SuperResolution_02/results.jsonl\n",
      "result": {
        "Process": true,
        "Results": true,
        "TimePoint": "2025-05-06T22:07:29",
        "comments": "PSNR: 26.950 (Threshold: 18.0), ESI: 1.660 (Threshold: 1.2), SSIM: 0.889 (Threshold: 0.8), Success: True"
      },
      "process_success": true,
      "Result_success": true
    },
    {
      "task_id": "InvisibleWatermark_02",
      "source_result_path": "/mnt/Data/coding_run/task19/InvisibleWatermark_02/b856ae21-4f57-41b3-936d-4df0eefb37d0/InvisibleWatermark/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== [Tue May  6 10:07:30 PM UTC 2025] 测试开始: InvisibleWatermark_02 ===\n[✅] 成功写入 JSONL: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/InvisibleWatermark_02/results.jsonl\n❌ 水印提取失败，未匹配！\n解码水印: Decoded watermark: text\nGround truth: text\n\n[✅ 成功] 测试完成，结果写入: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/InvisibleWatermark_02/results.jsonl\n",
      "result": {
        "Process": true,
        "Result": false,
        "TimePoint": "2025-05-06T22:07:30",
        "comments": "❌ 水印提取失败，未匹配！\n解码水印: Decoded watermark: text\nGround truth: text\n"
      },
      "process_success": true,
      "Result_success": false
    },
    {
      "task_id": "Stegano_03",
      "source_result_path": "/mnt/Data/coding_run/task19/Stegano_03/bdc7335a-eeae-41a3-bff0-9fe32555caf1/Stegano/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== [Tue May  6 10:07:31 PM UTC 2025] 测试开始: Stegano_03 ===\n✅ 测试结果已保存至 /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/Stegano_03/results.jsonl\n[✅ 成功] 测试完成，结果写入: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/Stegano_03/results.jsonl\n",
      "result": {
        "Process": true,
        "Result": "True",
        "TimePoint": "2025-05-06T22:07:31.972405",
        "comments": "✅ 提取结果: 'hidden_text' | GT: 'hidden_text'\n📐 PSNR: 99.81 dB\n🎯 水印检测_match: 100%\n🎯 PSNR ≥ 40.0: ✅ 满足"
      },
      "process_success": true,
      "Result_success": true
    },
    {
      "task_id": "Eparse_01",
      "source_result_path": "/mnt/Data/coding_run/task19/Eparse_01/3963185c-ef36-45d0-9cbf-79683f9b2ef9/Eparse/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== [Tue May  6 10:07:32 PM UTC 2025] 测试开始: Eparse_01 ===\n❌ 测试未通过。文本相似度=0.0323 < 0.8\n✅ 测试完成，结果已保存到: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/Eparse_01/results.jsonl\n[✅ 成功] 测试完成，结果写入: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/Eparse_01/results.jsonl\n",
      "result": {
        "Process": true,
        "TimePoint": "2025-05-06T22:07:33",
        "comments": "❌ 测试未通过。文本相似度=0.0323 < 0.8",
        "Results": false
      },
      "process_success": true,
      "Result_success": false
    },
    {
      "task_id": "AnimeGANv3_01",
      "source_result_path": "/mnt/Data/coding_run/task19/AnimeGANv3_01/8adb221e-e1fd-4277-b6b7-f6495e6d6ed9/AnimeGANv3/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== 开始处理仓库 AnimeGANv3_01 ===\nSetting up [LPIPS] perceptual loss: trunk [vgg], v[0.1], spatial [off]\nLoading model from: /home/.conda/envs/ex/lib/python3.11/site-packages/lpips/weights/v0.1/vgg.pth\n[成功] 输出文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/AnimeGANv3_01/results.jsonl\n/home/.conda/envs/ex/lib/python3.11/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.\n  warnings.warn(\n/home/.conda/envs/ex/lib/python3.11/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=VGG16_Weights.IMAGENET1K_V1`. You can also use `weights=VGG16_Weights.DEFAULT` to get the most up-to-date weights.\n  warnings.warn(msg)\n",
      "result": {
        "Process": true,
        "Result": true,
        "TimePoint": "2025-05-06T22:07:41",
        "comments": "LPIPS=0.3687 (>= 0.3 → OK)"
      },
      "process_success": true,
      "Result_success": true
    },
    {
      "task_id": "PyPDF2_02",
      "source_result_path": "/mnt/Data/coding_run/task19/PyPDF2_02/08421dc4-291a-4529-9580-f8584480a12c/PyPDF2/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== [Tue May  6 10:07:42 PM UTC 2025] 开始评估 PyPDF2_02 ===\n[✅ 成功] 测试完成，结果追加至 /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/PyPDF2_02/results.jsonl\n",
      "result": {
        "Process": true,
        "Result": false,
        "TimePoint": "2025-05-06T22:07:42.571683",
        "comments": "❌ 有 18 页未达到准确率要求\n❌ output_02.pdf 内容准确率仅 0.41%\n❌ output_03.pdf 内容准确率仅 13.99%\n❌ output_04.pdf 内容准确率仅 4.85%\n❌ output_05.pdf 内容准确率仅 4.32%\n❌ output_06.pdf 内容准确率仅 5.27%\n❌ output_07.pdf 内容准确率仅 9.05%\n❌ output_08.pdf 内容准确率仅 8.60%\n❌ output_09.pdf 内容准确率仅 6.47%\n❌ output_10.pdf 内容准确率仅 7.49%\n❌ output_11.pdf 内容准确率仅 10.41%\n❌ output_12.pdf 内容准确率仅 2.86%\n❌ output_13.pdf 内容准确率仅 10.34%\n❌ output_14.pdf 内容准确率仅 3.96%\n❌ output_15.pdf 内容准确率仅 31.70%\n❌ output_16.pdf 内容准确率仅 5.47%\n❌ output_17.pdf 内容准确率仅 9.39%\n❌ output_18.pdf 内容准确率仅 29.26%\n❌ output_19.pdf 内容准确率仅 66.67%"
      },
      "process_success": true,
      "Result_success": false
    },
    {
      "task_id": "PDFPlumber_02",
      "source_result_path": "/mnt/Data/coding_run/task19/PDFPlumber_02/dcd057d4-87fd-4f94-bfdc-0ec07c35c512/PDFPlumber/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== [Tue May  6 10:07:44 PM UTC 2025] 开始评估 PDFPlumber_02 ===\n[评估完成] 结果摘要：\n{\n  \"Process\": true,\n  \"Result\": false,\n  \"TimePoint\": \"2025-05-06T22:07:44.293636\",\n  \"comments\": \"整体表格行列内容匹配率：0.00%\\n❌ 测试未通过！\"\n}\n[✅ 成功] 测试完成，结果记录在: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/PDFPlumber_02/results.jsonl\n",
      "result": {
        "Process": true,
        "Result": false,
        "TimePoint": "2025-05-06T22:07:44.293636",
        "comments": "整体表格行列内容匹配率：0.00%\n❌ 测试未通过！"
      },
      "process_success": true,
      "Result_success": false
    },
    {
      "task_id": "TransparentBackground_02",
      "source_result_path": "/mnt/Data/coding_run/task19/TransparentBackground_02/e312688c-0a13-4154-9118-009b9219dd5d/TransparentBackground/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== 开始处理仓库 TransparentBackground_02 ===\n找到输出文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/output/TransparentBackground_02/output.png\nEvaluation Results:\nBGC (Background Green Coverage): 0.52410888671875\nBGC Threshold: 0.4\nFCF (Foreground Color Fidelity): 11.817608802530888\nFCF Threshold: 200\nSuccess: True\nDetected Green Color: [120, 253, 154]\n[成功] 输出文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/TransparentBackground_02/results.jsonl\n",
      "result": {
        "Process": true,
        "Result": "True",
        "TimePoint": "2025-05-06T22:07:45",
        "comments": "BGC: 0.524 (Threshold: 0.4), FCF: 11.818 (Threshold: 200), Detected Green Color: [120, 253, 154], Success: True"
      },
      "process_success": true,
      "Result_success": true
    },
    {
      "task_id": "StyleTransfer_03",
      "source_result_path": "/mnt/Data/coding_run/task19/StyleTransfer_03/3537da8f-ea36-496f-b80a-25ea22575f03/StyleTransfer/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== 开始处理仓库 StyleTransfer_03 ===\nSetting up [LPIPS] perceptual loss: trunk [vgg], v[0.1], spatial [off]\nLoading model from: /home/.conda/envs/ex/lib/python3.11/site-packages/lpips/weights/v0.1/vgg.pth\n[成功] 输出文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/StyleTransfer_03/results.jsonl\n/home/.conda/envs/ex/lib/python3.11/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.\n  warnings.warn(\n/home/.conda/envs/ex/lib/python3.11/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=VGG16_Weights.IMAGENET1K_V1`. You can also use `weights=VGG16_Weights.DEFAULT` to get the most up-to-date weights.\n  warnings.warn(msg)\n",
      "result": {
        "Process": true,
        "Result": true,
        "TimePoint": "2025-05-06T22:07:53",
        "comments": "LPIPS=0.8134 (>= 0.5 → OK); HI=0.7430 (>= 0.7 → OK)"
      },
      "process_success": true,
      "Result_success": true
    },
    {
      "task_id": "NeuroKit_01",
      "source_result_path": "/mnt/Data/coding_run/task19/NeuroKit_01/d1edf6ff-4842-48df-9a38-2dc6099be3f0/NeuroKit/output_result",
      "dst_path": "GitTaskBench",
      "logs": "\u001b[0;34m工作目录: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_scripts/NeuroKit_01\u001b[0m\n\u001b[0;34m输入目录: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/output/NeuroKit_01\u001b[0m\n\u001b[0;34m结果目录: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/NeuroKit_01\u001b[0m\n\n\u001b[0;33m================ ECG HRV 评估开始 =================\u001b[0m\n\u001b[0;34m运行评估脚本...\u001b[0m\n开始评估HRV分析结果...\n评估完成，结果已保存至/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/NeuroKit_01/results.jsonl\n评估结果: 失败\n\u001b[0;31m评估失败!\u001b[0m\n\u001b[0;31m错误: \u001b[0m\n\n\u001b[0;33m================ 评估结果 =================\u001b[0m\n\u001b[0;34mECG心率变异性分析: \u001b[0;31m失败 - \u001b[0m\u001b[0m\n\n\u001b[0;33m================ 评估结束 =================\u001b[0m\n\n\u001b[0;34m使用说明:\u001b[0m\n  \u001b[0;33m./run_evaluation.sh\u001b[0m             - 仅评估现有输出结果\n  \u001b[0;33m./run_evaluation.sh -r\u001b[0m          - 先运行测试脚本生成输出，再评估结果\n  \u001b[0;33m./run_evaluation.sh --result FILE\u001b[0m - 指定JSONL结果文件保存路径\n",
      "result": {
        "Process": false,
        "Result": false,
        "TimePoint": "2025-05-06T22:07:57.066422",
        "comments": "错误：找不到HRV结果文件。错误：找不到处理后的ECG数据。错误：找不到HRV统计摘要。"
      },
      "process_success": false,
      "Result_success": false
    },
    {
      "task_id": "TransparentBackground_03",
      "source_result_path": "/mnt/Data/coding_run/task19/TransparentBackground_03/9d42e87f-e0a6-42fc-8bc6-943190eb9451/TransparentBackground/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== 开始处理仓库 TransparentBackground_03 ===\n找到输出文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/output/TransparentBackground_03/output.png\nEvaluation Results:\nBBI (Background Blur Intensity): 5.414811611175537\nBBI Threshold: 20\nFSP (Foreground Sharpness Preservation): 0.1315963746449526\nFSP Threshold: 0.1\nSuccess: False\n[成功] 输出文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/TransparentBackground_03/results.jsonl\n",
      "result": {
        "Process": true,
        "Result": "False",
        "TimePoint": "2025-05-06T22:07:58",
        "comments": "BBI: 5.415 (Threshold: 20), FSP: 0.132 (Threshold: 0.1), Success: False. Possible issues: BBI too high (background not blurred enough) or FSP too high (foreground clarity degraded)."
      },
      "process_success": true,
      "Result_success": false
    },
    {
      "task_id": "Trafilatura_01",
      "source_result_path": "/mnt/Data/coding_run/task19/Trafilatura_01/0a5c465e-dd09-4595-a72a-282a1bfad759/Trafilatura/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== [Tue May  6 10:07:59 PM UTC 2025] 测试开始: Trafilatura_01 ===\n🔍 精度: 1.0000 | 召回率: 0.8431\n结果: :white_check_mark: 精确度 1.0000 满足 92%\n[✅ 成功] 测试完成，结果写入: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/Trafilatura_01/results.jsonl\n",
      "result": {
        "Process": true,
        "Results": true,
        "TimePoint": "2025-05-06T22:07:59",
        "comments": "精确度 1.0000 满足 92%"
      },
      "process_success": true,
      "Result_success": true
    },
    {
      "task_id": "Faker_01",
      "source_result_path": "/mnt/Data/coding_run/task19/Faker_01/ca288fdd-a2eb-4b71-b9a3-6839e5cf69c9/Faker/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== [Tue May  6 10:08:00 PM UTC 2025] 开始测试: Faker_01 ===\n[✅ 成功] 测试完成，结果写入: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/Faker_01/results.jsonl\n",
      "result": {
        "Process": true,
        "Result": true,
        "TimePoint": "2025-05-06T22:08:01.055818",
        "comments": "所有用户数据验证通过！"
      },
      "process_success": true,
      "Result_success": true
    },
    {
      "task_id": "SuperResolution_01",
      "source_result_path": "/mnt/Data/coding_run/task19/SuperResolution_01/da615645-4d21-4bea-bda4-bae6c0c28aee/SuperResolution/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== 开始处理仓库 SuperResolution_01 ===\nTrue\n[成功] 输出文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/SuperResolution_01/results.jsonl\n",
      "result": {
        "Process": true,
        "Results": true,
        "TimePoint": "2025-05-06T22:08:02",
        "comments": "PSNR: 56.52 dB (阈值: 18.0), SSIM: 1.0000 (阈值: 0.8, win_size=283)"
      },
      "process_success": true,
      "Result_success": true
    },
    {
      "task_id": "AnimeGANv3_02",
      "source_result_path": "/mnt/Data/coding_run/task19/AnimeGANv3_02/50ccab6f-09a2-45d4-b6ee-43df13599516/AnimeGANv3/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== 开始处理仓库 AnimeGANv3_02 ===\nSetting up [LPIPS] perceptual loss: trunk [vgg], v[0.1], spatial [off]\nLoading model from: /home/.conda/envs/ex/lib/python3.11/site-packages/lpips/weights/v0.1/vgg.pth\n[成功] 输出文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/AnimeGANv3_02/results.jsonl\n/home/.conda/envs/ex/lib/python3.11/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.\n  warnings.warn(\n/home/.conda/envs/ex/lib/python3.11/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=VGG16_Weights.IMAGENET1K_V1`. You can also use `weights=VGG16_Weights.DEFAULT` to get the most up-to-date weights.\n  warnings.warn(msg)\n",
      "result": {
        "Process": true,
        "Result": true,
        "TimePoint": "2025-05-06T22:08:13",
        "comments": "LPIPS=0.3654 (>= 0.3 → OK)"
      },
      "process_success": true,
      "Result_success": true
    },
    {
      "task_id": "InvisibleWatermark_03",
      "source_result_path": "/mnt/Data/coding_run/task19/InvisibleWatermark_03/52b8b67d-9ea7-4c45-8105-f60e9b54f672/InvisibleWatermark/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== 开始处理仓库 InvisibleWatermark_03 ===\n✅ 结果已追加到 JSONL 文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/InvisibleWatermark_03/results.jsonl\n[成功] 输出文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/output/InvisibleWatermark_03/output.png\n",
      "result": {
        "Process": false,
        "Result": false,
        "TimePoint": "2025-05-06T22:08:21.234503",
        "Comments": "错误：水印图像文件 '/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/output/InvisibleWatermark_03/output.png' 不存在或为空。"
      },
      "process_success": false,
      "Result_success": false
    },
    {
      "task_id": "Faker_03",
      "source_result_path": "/mnt/Data/coding_run/task19/Faker_03/488e4f84-407e-4566-8a57-a0dfbb5432d2/Faker/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== [Tue May  6 10:08:24 PM UTC 2025] 开始测试: Faker_03 ===\n原始文本与假文本的Jaccard相似度：0.7258\n✅ 假文本文件验证通过，相似度：0.7258 超过阈值！\n[✅ 成功] 测试完成，结果写入: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/Faker_03/results.jsonl\n",
      "result": {
        "Process": true,
        "Results": true,
        "TimePoint": "2025-05-06T22:08:24",
        "comments": "✅ 假文本文件验证通过，相似度：0.7258 超过阈值！"
      },
      "process_success": true,
      "Result_success": true
    },
    {
      "task_id": "PDFPlumber_01",
      "source_result_path": "/mnt/Data/coding_run/task19/PDFPlumber_01/0b63597f-c34d-4f17-9f7d-2230eb2d0cc4/PDFPlumber/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== [Tue May  6 10:08:25 PM UTC 2025] 测试开始: PDFPlumber_01 ===\n文本整体相似度：100.00%\n✅ 测试通过！整体文本相似度达到要求。\n结果已保存到: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/PDFPlumber_01/results.jsonl\n[✅ 成功] 测试完成，结果写入: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/PDFPlumber_01/results.jsonl\n",
      "result": {
        "Process": true,
        "Results": true,
        "TimePoint": "2025-05-06T22:08:26",
        "comments": ""
      },
      "process_success": true,
      "Result_success": true
    },
    {
      "task_id": "StyleTransfer_01",
      "source_result_path": "/mnt/Data/coding_run/task19/StyleTransfer_01/5ebbe8dd-1ea4-4f14-87a9-2a16a1e93657/StyleTransfer/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== 开始处理仓库 StyleTransfer_01 ===\nSetting up [LPIPS] perceptual loss: trunk [vgg], v[0.1], spatial [off]\nLoading model from: /home/.conda/envs/ex/lib/python3.11/site-packages/lpips/weights/v0.1/vgg.pth\n[成功] 输出文件: /mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/StyleTransfer_01/results.jsonl\n/home/.conda/envs/ex/lib/python3.11/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.\n  warnings.warn(\n/home/.conda/envs/ex/lib/python3.11/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=VGG16_Weights.IMAGENET1K_V1`. You can also use `weights=VGG16_Weights.DEFAULT` to get the most up-to-date weights.\n  warnings.warn(msg)\n",
      "result": {
        "Process": true,
        "Result": false,
        "TimePoint": "2025-05-06T22:08:32",
        "comments": "LPIPS=0.7524 (>= 0.5 → OK); HI=0.6753 (>= 0.7 → FAIL)"
      },
      "process_success": true,
      "Result_success": false
    },
    {
      "task_id": "Eparse_03",
      "source_result_path": "/mnt/Data/coding_run/task19/Eparse_03/1be0f8f8-dd3b-4697-adba-a20516a9c20c/Eparse/output_result",
      "dst_path": "GitTaskBench",
      "logs": "=== 开始评测：Eparse_03 ===\n✅ 相似度计算完成: 0.3487\n❌ Failed: 相似度低于 0.8\n[✅ 成功] 测试完成，结果写入：/mnt/Code/Tasks/Code-Repo-Agent/dataset/eval/GitTaskBench/eval_automation/test_results/Eparse_03/results.jsonl\n",
      "result": {
        "Process": true,
        "Result": false,
        "TimePoint": "2025-05-06T22:08:34.565524",
        "comments": "✅ 相似度计算完成: 0.3487"
      },
      "process_success": true,
      "Result_success": false
    }
  ]
}