{"model_name_or_path": "default__claude-3-5-sonnet-20241022__t-0.00__p-1.00__c-3.00___537525", "instance_id": "537525", "model_patch": "diff --git a/process_eog.py b/process_eog.py\nnew file mode 100644\nindex 00000000..00b3de9d\n--- /dev/null\n+++ b/process_eog.py\n@@ -0,0 +1,48 @@\n+\n+import pandas as pd\n+import neurokit2 as nk\n+\n+# Read the input CSV file\n+input_file = \"/data/data/agent_test_codebase/GitTaskBench/queries/NeuroKit_03/input/NeuroKit_03_input.csv\"\n+df = pd.read_csv(input_file)\n+\n+# Process EOG signal\n+# Using PhotoSensor column as EOG data and sampling rate needs to be determined\n+eog_signal = df['PhotoSensor'].values\n+sampling_rate = 1000  # This is an assumption, adjust if needed\n+\n+# Clean and process EOG signal\n+eog_cleaned = nk.eog_clean(eog_signal, sampling_rate=sampling_rate)\n+eog_peaks, info = nk.eog_peaks(eog_cleaned, sampling_rate=sampling_rate)\n+print(\"Info dictionary keys:\", info.keys())\n+\n+# Calculate metrics\n+# 1. Number of peaks\n+number_of_peaks = len(info['EOG_Blinks'])\n+\n+# 2. Peak times in seconds\n+peak_times = [peak/sampling_rate for peak in info['EOG_Blinks']]\n+\n+# 3. Mean respiratory rate (assuming EOG peaks correspond to blinks)\n+# Calculate intervals between peaks in seconds\n+peak_intervals = [peak_times[i+1] - peak_times[i] for i in range(len(peak_times)-1)]\n+if peak_intervals:\n+    mean_interval = sum(peak_intervals) / len(peak_intervals)\n+    # Convert to BPM (blinks per minute)\n+    mean_rate_bpm = 60 / mean_interval\n+else:\n+    mean_rate_bpm = 0\n+\n+# Create output DataFrame\n+output_data = {\n+    'Mean_Respiratory_Rate_BPM': [mean_rate_bpm],\n+    'Peak_Times_Seconds': [peak_times],\n+    'Number_of_Peaks': [number_of_peaks]\n+}\n+output_df = pd.DataFrame(output_data)\n+\n+# Save to CSV\n+output_file = \"/data/data/agent_test_codebase/GitTaskBench/eval_automation/output/NeuroKit_03/output.csv\"\n+output_df.to_csv(output_file, index=False)\n+\n+print(f\"Processing complete. Output saved to {output_file}\")\n\\ No newline at end of file\n"}