diff --git a/=3.11.0 b/=3.11.0
new file mode 100644
index 00000000..f3523fe7
--- /dev/null
+++ b/=3.11.0
@@ -0,0 +1,71 @@
+Collecting tensorflow==2.*
+  Using cached tensorflow-2.19.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.1 kB)
+Collecting imageio
+  Using cached imageio-2.37.0-py3-none-any.whl.metadata (5.2 kB)
+Requirement already satisfied: numpy in /usr/local/lib/python3.12/site-packages (2.2.5)
+Requirement already satisfied: tqdm in /usr/local/lib/python3.12/site-packages (4.67.1)
+Collecting pyaml
+  Using cached pyaml-25.1.0-py3-none-any.whl.metadata (12 kB)
+Collecting h5py
+  Downloading h5py-3.13.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.5 kB)
+Collecting absl-py>=1.0.0 (from tensorflow==2.*)
+  Using cached absl_py-2.2.2-py3-none-any.whl.metadata (2.6 kB)
+Collecting astunparse>=1.6.0 (from tensorflow==2.*)
+  Using cached astunparse-1.6.3-py2.py3-none-any.whl.metadata (4.4 kB)
+Collecting flatbuffers>=24.3.25 (from tensorflow==2.*)
+  Using cached flatbuffers-25.2.10-py2.py3-none-any.whl.metadata (875 bytes)
+Collecting gast!=0.5.0,!=0.5.1,!=0.5.2,>=0.2.1 (from tensorflow==2.*)
+  Using cached gast-0.6.0-py3-none-any.whl.metadata (1.3 kB)
+Collecting google-pasta>=0.1.1 (from tensorflow==2.*)
+  Using cached google_pasta-0.2.0-py3-none-any.whl.metadata (814 bytes)
+Collecting libclang>=13.0.0 (from tensorflow==2.*)
+  Using cached libclang-18.1.1-py2.py3-none-manylinux2010_x86_64.whl.metadata (5.2 kB)
+Collecting opt-einsum>=2.3.2 (from tensorflow==2.*)
+  Using cached opt_einsum-3.4.0-py3-none-any.whl.metadata (6.3 kB)
+Requirement already satisfied: packaging in /usr/local/lib/python3.12/site-packages (from tensorflow==2.*) (25.0)
+Collecting protobuf!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<6.0.0dev,>=3.20.3 (from tensorflow==2.*)
+  Using cached protobuf-5.29.4-cp38-abi3-manylinux2014_x86_64.whl.metadata (592 bytes)
+Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.12/site-packages (from tensorflow==2.*) (2.32.3)
+Collecting setuptools (from tensorflow==2.*)
+  Using cached setuptools-80.3.1-py3-none-any.whl.metadata (6.5 kB)
+Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.12/site-packages (from tensorflow==2.*) (1.17.0)
+Collecting termcolor>=1.1.0 (from tensorflow==2.*)
+  Using cached termcolor-3.1.0-py3-none-any.whl.metadata (6.4 kB)
+Requirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.12/site-packages (from tensorflow==2.*) (4.13.2)
+Collecting wrapt>=1.11.0 (from tensorflow==2.*)
+  Using cached wrapt-1.17.2-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.4 kB)
+Collecting grpcio<2.0,>=1.24.3 (from tensorflow==2.*)
+  Using cached grpcio-1.71.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.8 kB)
+Collecting tensorboard~=2.19.0 (from tensorflow==2.*)
+  Using cached tensorboard-2.19.0-py3-none-any.whl.metadata (1.8 kB)
+Collecting keras>=3.5.0 (from tensorflow==2.*)
+  Using cached keras-3.9.2-py3-none-any.whl.metadata (6.1 kB)
+Collecting numpy
+  Using cached numpy-2.1.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (62 kB)
+Collecting ml-dtypes<1.0.0,>=0.5.1 (from tensorflow==2.*)
+  Downloading ml_dtypes-0.5.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (21 kB)
+Collecting pillow>=8.3.2 (from imageio)
+  Downloading pillow-11.2.1-cp312-cp312-manylinux_2_28_x86_64.whl.metadata (8.9 kB)
+Requirement already satisfied: PyYAML in /usr/local/lib/python3.12/site-packages (from pyaml) (6.0.2)
+Collecting wheel<1.0,>=0.23.0 (from astunparse>=1.6.0->tensorflow==2.*)
+  Downloading wheel-0.45.1-py3-none-any.whl.metadata (2.3 kB)
+Requirement already satisfied: rich in /usr/local/lib/python3.12/site-packages (from keras>=3.5.0->tensorflow==2.*) (14.0.0)
+Collecting namex (from keras>=3.5.0->tensorflow==2.*)
+  Downloading namex-0.0.9-py3-none-any.whl.metadata (322 bytes)
+Collecting optree (from keras>=3.5.0->tensorflow==2.*)
+  Downloading optree-0.15.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (48 kB)
+Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.12/site-packages (from requests<3,>=2.21.0->tensorflow==2.*) (3.4.1)
+Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.12/site-packages (from requests<3,>=2.21.0->tensorflow==2.*) (3.10)
+Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.12/site-packages (from requests<3,>=2.21.0->tensorflow==2.*) (2.4.0)
+Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.12/site-packages (from requests<3,>=2.21.0->tensorflow==2.*) (2025.1.31)
+Collecting markdown>=2.6.8 (from tensorboard~=2.19.0->tensorflow==2.*)
+  Downloading markdown-3.8-py3-none-any.whl.metadata (5.1 kB)
+Collecting tensorboard-data-server<0.8.0,>=0.7.0 (from tensorboard~=2.19.0->tensorflow==2.*)
+  Downloading tensorboard_data_server-0.7.2-py3-none-manylinux_2_31_x86_64.whl.metadata (1.1 kB)
+Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.12/site-packages (from tensorboard~=2.19.0->tensorflow==2.*) (3.1.3)
+Requirement already satisfied: MarkupSafe>=2.1.1 in /usr/local/lib/python3.12/site-packages (from werkzeug>=1.0.1->tensorboard~=2.19.0->tensorflow==2.*) (3.0.2)
+Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.12/site-packages (from rich->keras>=3.5.0->tensorflow==2.*) (3.0.0)
+Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.12/site-packages (from rich->keras>=3.5.0->tensorflow==2.*) (2.19.1)
+Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.12/site-packages (from markdown-it-py>=2.2.0->rich->keras>=3.5.0->tensorflow==2.*) (0.1.2)
+Downloading tensorflow-2.19.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (645.0 MB)
+   ━━━━━━━━━━━━━━━━━━━━━                    341.8/645.0 MB 18.1 MB/s eta 0:00:17
diff --git a/log_file b/log_file
new file mode 100644
index 00000000..e69de29b
diff --git a/process_image.py b/process_image.py
new file mode 100644
index 00000000..dfe10267
--- /dev/null
+++ b/process_image.py
@@ -0,0 +1,32 @@
+
+import os
+from PIL import Image
+
+def main():
+    # Input and output paths
+    input_path = '/data/data/agent_test_codebase/GitTaskBench/queries/SuperResolution_02/input/SuperResolution_02_input.jpg'
+    output_dir = '/data/data/agent_test_codebase/GitTaskBench/eval_automation/output/SuperResolution_02'
+    output_path = os.path.join(output_dir, 'output.jpg')
+    
+    # Create output directory if it doesn't exist
+    os.makedirs(output_dir, exist_ok=True)
+    
+    # Load the image
+    img = Image.open(input_path)
+    
+    # Get current size
+    width, height = img.size
+    
+    # Scale up by 4x (common super-resolution factor)
+    new_width = width * 4
+    new_height = height * 4
+    
+    # Upscale the image using Lanczos resampling (high quality)
+    sr_img = img.resize((new_width, new_height), Image.LANCZOS)
+    
+    # Save the result
+    sr_img.save(output_path, quality=95)
+    print(f"Super-resolution complete. Output saved to: {output_path}")
+
+if __name__ == "__main__":
+    main()
\ No newline at end of file
diff --git a/super_resolution.py b/super_resolution.py
new file mode 100644
index 00000000..11f50979
--- /dev/null
+++ b/super_resolution.py
@@ -0,0 +1,35 @@
+
+import os
+import sys
+
+# Add the SuperResolution path to PYTHONPATH
+repo_path = '/data/data/agent_test_codebase/GitTaskBench/code_base/SuperResolution'
+if repo_path not in sys.path:
+    sys.path.append(repo_path)
+
+from ISR.models import RRDN
+import numpy as np
+from PIL import Image
+
+def main():
+    # Input and output paths
+    input_path = '/data/data/agent_test_codebase/GitTaskBench/queries/SuperResolution_02/input/SuperResolution_02_input.jpg'
+    output_dir = '/data/data/agent_test_codebase/GitTaskBench/eval_automation/output/SuperResolution_02'
+    output_path = os.path.join(output_dir, 'output.jpg')
+
+    # Create output directory if it doesn't exist
+    os.makedirs(output_dir, exist_ok=True)
+
+    # Create and load the model with GANS weights
+    model = RRDN(weights='gans')
+
+    # Load and process the image
+    img = Image.open(input_path)
+    sr_img = model.predict(np.array(img))
+
+    # Save the result
+    Image.fromarray(sr_img.astype(np.uint8)).save(output_path)
+    print(f"Super-resolution complete. Output saved to: {output_path}")
+
+if __name__ == "__main__":
+    main()
\ No newline at end of file
