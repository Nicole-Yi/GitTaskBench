{"model_name_or_path": "default__claude-3-5-sonnet-20241022__t-0.00__p-1.00__c-3.00___6837a5", "instance_id": "6837a5", "model_patch": "diff --git a/asr_script.py b/asr_script.py\nnew file mode 100644\nindex 00000000..a60f613d\n--- /dev/null\n+++ b/asr_script.py\n@@ -0,0 +1,33 @@\n+\n+import sys\n+sys.path.append(\"/data/data/agent_test_codebase/GitTaskBench/code_base/FunASR\")\n+\n+from funasr.utils.inferencer import FunASRInferencer\n+from funasr.utils.types import AudioIn\n+\n+# Initialize the model\n+model = FunASRInferencer()\n+\n+# Path to the input audio file\n+input_file = \"/data/data/agent_test_codebase/GitTaskBench/queries/FunASR_01/input/FunASR_01_input.wav\"\n+\n+# Generate transcription\n+audio_in = AudioIn(input_file)\n+res = model.infer(audio_in)\n+\n+# Write the result to the output file\n+output_dir = \"/data/data/agent_test_codebase/GitTaskBench/eval_automation/output/FunASR_01\"\n+output_file = f\"{output_dir}/output\"\n+\n+# Create output directory if it doesn't exist\n+import os\n+os.makedirs(output_dir, exist_ok=True)\n+\n+# Write the transcription to the output file\n+with open(output_file, \"w\", encoding=\"utf-8\") as f:\n+    if isinstance(res, list):\n+        f.write(str(res[0][\"text\"]))\n+    else:\n+        f.write(str(res))\n+\n+print(\"Transcription completed. Output written to:\", output_file)\n\\ No newline at end of file\n"}