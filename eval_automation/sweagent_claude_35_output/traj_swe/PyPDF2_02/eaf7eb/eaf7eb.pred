{"model_name_or_path": "default__claude-3-5-sonnet-20241022__t-0.00__p-1.00__c-3.00___eaf7eb", "instance_id": "eaf7eb", "model_patch": "diff --git a/split_pdf.py b/split_pdf.py\nnew file mode 100644\nindex 00000000..97c2052e\n--- /dev/null\n+++ b/split_pdf.py\n@@ -0,0 +1,32 @@\n+\n+import os\n+from pypdf import PdfReader, PdfWriter\n+\n+# Input and output paths\n+input_pdf_path = \"/data/data/agent_test_codebase/GitTaskBench/queries/PyPDF2_02/input/PyPDF2_02_input.pdf\"\n+output_dir = \"/data/data/agent_test_codebase/GitTaskBench/eval_automation/output/PyPDF2_02\"\n+\n+# Create output directory if it doesn't exist\n+os.makedirs(output_dir, exist_ok=True)\n+\n+# Read the input PDF\n+reader = PdfReader(input_pdf_path)\n+total_pages = len(reader.pages)\n+\n+# Split each page into a separate PDF\n+for page_num in range(total_pages):\n+    # Create a PDF writer object\n+    writer = PdfWriter()\n+    \n+    # Add the current page\n+    writer.add_page(reader.pages[page_num])\n+    \n+    # Generate output filename\n+    output_filename = f\"output_{str(page_num + 1).zfill(2)}.pdf\"\n+    output_path = os.path.join(output_dir, output_filename)\n+    \n+    # Write the page to a new PDF file\n+    with open(output_path, \"wb\") as output_file:\n+        writer.write(output_file)\n+\n+print(f\"Successfully split PDF into {total_pages} separate files in {output_dir}\")\n\\ No newline at end of file\n"}