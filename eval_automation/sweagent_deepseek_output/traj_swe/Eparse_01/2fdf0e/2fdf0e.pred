{"model_name_or_path": "deepseek-v3__t-0.00__p-1.00__c-0.00___2fdf0e", "instance_id": "2fdf0e", "model_patch": "diff --git a/scan_excel_files.py b/scan_excel_files.py\nnew file mode 100644\nindex 00000000..7003324f\n--- /dev/null\n+++ b/scan_excel_files.py\n@@ -0,0 +1,33 @@\n+\n+#!/usr/bin/env python3\n+\n+import os\n+import subprocess\n+from pathlib import Path\n+\n+# Input and output paths\n+input_dir = \"/data/data/agent_test_codebase/GitTaskBench/queries/Eparse_01/input/Eparse_01_input\"\n+output_dir = \"/data/data/agent_test_codebase/GitTaskBench/eval_automation/output/Eparse_01\"\n+output_file = os.path.join(output_dir, \"output.txt\")\n+\n+# Ensure output directory exists\n+os.makedirs(output_dir, exist_ok=True)\n+\n+# Initialize the output file\n+with open(output_file, 'w') as f:\n+    f.write(\"Excel Files and Sheet Information:\\n\")\n+\n+# Scan the input directory for Excel files\n+for root, _, files in os.walk(input_dir):\n+    for file in files:\n+        if file.endswith(('.xlsx', '.xls')):\n+            file_path = os.path.join(root, file)\n+            # Run the Eparse CLI to get sheet information\n+            result = subprocess.run(\n+                [\"python\", \"-m\", \"eparse.cli\", \"--file\", file_path, \"--verbose\"],\n+                capture_output=True, text=True\n+            )\n+            # Write the output to the file\n+            with open(output_file, 'a') as f:\n+                f.write(f\"File: {file_path}\\n\")\n+                f.write(f\"Sheet Info:\\n{result.stdout}\\n\\n\")\n\\ No newline at end of file\n"}