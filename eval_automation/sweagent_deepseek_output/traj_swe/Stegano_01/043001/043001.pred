{"model_name_or_path": "deepseek-v3__t-0.00__p-1.00__c-0.00___043001", "instance_id": "043001", "model_patch": "diff --git a/embed_watermark.py b/embed_watermark.py\nnew file mode 100644\nindex 00000000..1669ac69\n--- /dev/null\n+++ b/embed_watermark.py\n@@ -0,0 +1,42 @@\n+\n+import sys\n+import os\n+sys.path.append(\"/data/data/agent_test_codebase/GitTaskBench/code_base/Stegano\")\n+\n+# Manually copied hide function from stegano.lsb.lsb\n+def hide(input_image, message):\n+    \"\"\"Hide a message in an image using LSB steganography.\"\"\"\n+    from PIL import Image\n+    import numpy as np\n+\n+    img = Image.open(input_image)\n+    pixels = np.array(img)\n+\n+    # Convert message to binary\n+    binary_message = ''.join(format(ord(char), '08b') for char in message)\n+    binary_message += '00000000'  # Null terminator\n+\n+    # Flatten the image array\n+    flat_pixels = pixels.flatten()\n+\n+    # Embed the message in the LSBs\n+    for i in range(len(binary_message)):\n+        if i < len(flat_pixels):\n+            flat_pixels[i] = (flat_pixels[i] & ~1) | int(binary_message[i])\n+\n+    # Reshape the array back to the original shape\n+    pixels = flat_pixels.reshape(pixels.shape)\n+\n+    # Save the modified image\n+    new_img = Image.fromarray(pixels)\n+    return new_img\n+\n+# Input and output paths\n+input_image = \"/data/data/agent_test_codebase/GitTaskBench/queries/Stegano_01/input/Stegano_01_input.png\"\n+output_image = \"/data/data/agent_test_codebase/GitTaskBench/eval_automation/output/Stegano_01/output.png\"\n+\n+# Embed the watermark \"stegano\" into the image\n+secret = hide(input_image, \"stegano\")\n+secret.save(output_image)\n+\n+print(\"Watermark embedded successfully. Output saved at:\", output_image)\n\\ No newline at end of file\n"}