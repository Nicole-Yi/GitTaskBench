{"model_name_or_path": "deepseek-v3__t-0.00__p-1.00__c-0.00___560fda", "instance_id": "560fda", "model_patch": "diff --git a/embed_watermark.py b/embed_watermark.py\nnew file mode 100644\nindex 00000000..d4d5d1f6\n--- /dev/null\n+++ b/embed_watermark.py\n@@ -0,0 +1,23 @@\n+\n+import sys\n+sys.path.append(\"/data/data/agent_test_codebase/GitTaskBench/code_base/InvisibleWatermark\")\n+import cv2\n+from imwatermark import WatermarkEncoder\n+\n+# Input and output paths\n+input_path = \"/data/data/agent_test_codebase/GitTaskBench/queries/InvisibleWatermark_03/input/InvisibleWatermark_03_input.png\"\n+output_path = \"/data/data/agent_test_codebase/GitTaskBench/eval_automation/output/InvisibleWatermark_03/output.png\"\n+\n+# Read the input image\n+bgr = cv2.imread(input_path)\n+\n+# Embed the watermark\n+wm = \"watermark\"\n+encoder = WatermarkEncoder()\n+encoder.set_watermark('bytes', wm.encode('utf-8'))\n+bgr_encoded = encoder.encode(bgr, 'dwtDct')\n+\n+# Save the output image\n+cv2.imwrite(output_path, bgr_encoded)\n+\n+print(\"Watermark embedded successfully.\")\n\\ No newline at end of file\n"}