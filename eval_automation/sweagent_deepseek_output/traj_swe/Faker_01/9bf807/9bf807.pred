{"model_name_or_path": "deepseek-v3__t-0.00__p-1.00__c-0.00___9bf807", "instance_id": "9bf807", "model_patch": "diff --git a/generate_fake_users.py b/generate_fake_users.py\nnew file mode 100644\nindex 00000000..2f1bbf1b\n--- /dev/null\n+++ b/generate_fake_users.py\n@@ -0,0 +1,28 @@\n+\n+import sys\n+sys.path.append(\"/data/data/agent_test_codebase/GitTaskBench/code_base/Faker\")\n+from faker import Faker\n+import csv\n+\n+# Initialize Faker\n+def generate_fake_users(output_file, num_records=100):\n+    fake = Faker()\n+    \n+    # Generate fake data\n+    users = []\n+    for _ in range(num_records):\n+        username = fake.user_name()\n+        email = fake.email()\n+        users.append({\"Username\": username, \"Email\": email})\n+    \n+    # Write to CSV\n+    with open(output_file, mode='w', newline='') as file:\n+        writer = csv.DictWriter(file, fieldnames=[\"Username\", \"Email\"])\n+        writer.writeheader()\n+        writer.writerows(users)\n+    \n+    print(f\"Successfully generated {num_records} fake user records in {output_file}\")\n+\n+if __name__ == \"__main__\":\n+    output_path = \"/data/data/agent_test_codebase/GitTaskBench/eval_automation/output/Faker_01/users.csv\"\n+    generate_fake_users(output_path)\n\\ No newline at end of file\n"}