{"model_name_or_path": "default__gpt-4o__t-0.00__p-1.00__c-3.00___d23296", "instance_id": "d23296", "model_patch": "diff --git a/eng_transcription.py b/eng_transcription.py\nnew file mode 100644\nindex 00000000..d20df6ca\n--- /dev/null\n+++ b/eng_transcription.py\n@@ -0,0 +1,33 @@\n+\n+from funasr import AutoModel\n+from funasr.utils.postprocess_utils import rich_transcription_postprocess\n+\n+input_file = '/data/data/agent_test_codebase/GitTaskBench/queries/FunASR_02/input/FunASR_02_input.mp3'\n+output_file = '/data/data/agent_test_codebase/GitTaskBench/eval_automation/output/FunASR_02/output.txt'\n+\n+model_dir = \"iic/SenseVoiceSmall\"\n+\n+model = AutoModel(\n+    model=model_dir,\n+    vad_model=\"fsmn-vad\",\n+    vad_kwargs={\"max_single_segment_time\": 30000},\n+    device=\"cuda:0\",\n+)\n+\n+# Transcription for English audio\n+res = model.generate(\n+    input=input_file,\n+    cache={},\n+    language=\"en\",\n+    use_itn=True,\n+    batch_size_s=60,\n+    merge_vad=True,\n+    merge_length_s=15,\n+)\n+text = rich_transcription_postprocess(res[0][\"text\"])\n+\n+# Write to output file\n+with open(output_file, 'w') as f:\n+    f.write(text)\n+\n+print(f\"Transcription complete. Output written to {output_file}\")\n\\ No newline at end of file\n"}