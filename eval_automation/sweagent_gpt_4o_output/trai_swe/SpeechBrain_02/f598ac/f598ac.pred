{"model_name_or_path": "default__gpt-4o__t-0.00__p-1.00__c-3.00___f598ac", "instance_id": "f598ac", "model_patch": "diff --git a/perform_diarization.py b/perform_diarization.py\nnew file mode 100644\nindex 00000000..7aa7f549\n--- /dev/null\n+++ b/perform_diarization.py\n@@ -0,0 +1,43 @@\n+\n+import os\n+from pydub import AudioSegment\n+\n+# Define directories\n+input_file = \"/data/data/agent_test_codebase/GitTaskBench/queries/SpeechBrain_02/input/SpeechBrain_02_input.mp3\"\n+output_dir = \"/data/data/agent_test_codebase/GitTaskBench/eval_automation/output/SpeechBrain_02\"\n+\n+def split_audio(file_path, segment_length_ms, dest_dir):\n+    if not os.path.exists(dest_dir):\n+        os.makedirs(dest_dir)\n+    \n+    audio = AudioSegment.from_mp3(file_path)\n+    length_in_ms = len(audio)\n+    \n+    for i in range(0, length_in_ms, segment_length_ms):\n+        segment = audio[i:i+segment_length_ms]\n+        segment_filename = os.path.join(dest_dir, f\"output_segment_{i//segment_length_ms}.mp3\")\n+        segment.export(segment_filename, format=\"mp3\")\n+        print(f\"Exported {segment_filename}\")\n+\n+# Split the audio into 10 second segments (10000 milliseconds)\n+split_audio(input_file, 10000, output_dir)\n+print(\"Audio segmentation completed\")(\"/data/data/agent_test_codebase/GitTaskBench/code_base/SpeechBrain\")\n+import json\n+from speechbrain.inference.diarization import Speech_Emotion_Diarization\n+\n+# Directories\n+input_file = \"/data/data/agent_test_codebase/GitTaskBench/queries/SpeechBrain_02/input/SpeechBrain_02_input.mp3\"\n+output_dir = \"/data/data/agent_test_codebase/GitTaskBench/eval_automation/output/SpeechBrain_02\"\n+\n+# Initialize diarization model using pretrained models\n+model = Speech_Emotion_Diarization.from_hparams(source=\"speechbrain/emotion-diarization-wavlm-large\", savedir=output_dir)\n+\n+# Perform diarization\n+emotions_durations = model.diarize_file(input_file)\n+\n+# Save the output\n+output_path = os.path.join(output_dir, \"output.json\")\n+with open(output_path, \"w\") as outfile:\n+    json.dump(emotions_durations, outfile)\n+\n+print(f\"Diarization completed and saved to {output_path}\")\n\\ No newline at end of file\n"}